---
title: Loops
---

<p>
  Computers were invented to perform repetative tasks, so we need
  tools to make performing the same action over and over again
  easy.  There are two main looping constructs for this task:
  while and for loops.
</p>

<h2>While</h2>

<p>
  <code>while</code> loops are useful when the loop will be performed an unknown
  number of times, instead terminating when some condition is met.
</p>      
<pre>
while (condition) {
  // Perform this task until condition is false
}
</pre>
<p>
  It is important to make sure that the body of the loop will eventually
  cause the condition to be false, otherwise your program can run forever.
</p>

<h2>For</h2>

<p>
  <code>for</code> loops are used when a block of code should be
  run a known number of times, or the block of code needs access
  to the iteration variable.
</p>
<pre>
for (int i = 0; i < 10; ++i) {
  // Perform this as long as i is less than 10
}
		    </pre>

<p>
  We have access to the counting variable inside of the loop. This can be
  used, for example, to print out the numbers between 1 and 10.
</p>

<pre>
for (int i = 1; i <= 10; ++i) {
  NSLog(@"The number is: %d", i);
}
</pre>

<section>
  <h1>Excersizes</h1>

  <ol>
    <li>
      Write a guess my number game. The user will guess a number, the program
      then tells them if they are too high or too low. The program runs
      until the user guesses the number. Look up the rand() function to
      find out how to generate an initial number.
    </li>
    <li>
      Write the classic FizzBuzz program. For the numbers from 1 to 100,
      if the number is divisible by 3, print out 'Fizz'. If the number
      is divisible by 5, print out 'Buzz'. If the number is divisible by
      both 3 and 5, print out 'FizzBuzz'.
    </li>
  </ol>
</section>
